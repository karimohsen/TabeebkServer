package com.tabeebkServer.pojo;
// Generated May 24, 2015 7:54:12 AM by Hibernate Tools 4.3.1


import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * DoctorClinc generated by hbm2java
 */
@Entity
@Table(name="doctor_clinc"
    ,catalog="graduationprojecttabeebakdb"
)
public class DoctorClinc  implements java.io.Serializable {


     private DoctorClincId id;
     private Clinic clinic;
     private Doctor doctor;
     private int deleted;

    public DoctorClinc() {
    }

    public DoctorClinc(DoctorClincId id, Clinic clinic, Doctor doctor, int deleted) {
       this.id = id;
       this.clinic = clinic;
       this.doctor = doctor;
       this.deleted = deleted;
    }
   
     @EmbeddedId

    
    @AttributeOverrides( {
        @AttributeOverride(name="doctorId", column=@Column(name="doctor_id", nullable=false) ), 
        @AttributeOverride(name="clincId", column=@Column(name="clinc_id", nullable=false) ) } )
    public DoctorClincId getId() {
        return this.id;
    }
    
    public void setId(DoctorClincId id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="clinc_id", nullable=false, insertable=false, updatable=false)
    public Clinic getClinic() {
        return this.clinic;
    }
    
    public void setClinic(Clinic clinic) {
        this.clinic = clinic;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="doctor_id", nullable=false, insertable=false, updatable=false)
    public Doctor getDoctor() {
        return this.doctor;
    }
    
    public void setDoctor(Doctor doctor) {
        this.doctor = doctor;
    }

    
    @Column(name="deleted", nullable=false)
    public int getDeleted() {
        return this.deleted;
    }
    
    public void setDeleted(int deleted) {
        this.deleted = deleted;
    }




}


